<?php

/**
 * @file
 * Contains ddd_global.module.
 */

use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Link;
use Drupal\Core\Block\BlockPluginInterface;
use Drupal\Core\Entity\EntityInterface;
use Drupal\Core\Entity\Display\EntityViewDisplayInterface;
use Symfony\Component\HttpFoundation\RedirectResponse;

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ddd_global_form_contact_message_contact_us_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Remove the Preview button.
  unset($form['actions']['preview']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ddd_global_form_contact_message_scholarships_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Remove the Preview button.
  unset($form['actions']['preview']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ddd_global_form_contact_message_sponsorship_request_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Remove the Preview button.
  unset($form['actions']['preview']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ddd_global_form_contact_message_volunteer_application_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Remove the Preview button.
  unset($form['actions']['preview']);
}

/**
 * Implements hook_form_FORM_ID_alter().
 */
function ddd_global_form_contact_message_mentor_application_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  // Remove the Preview button.
  unset($form['actions']['preview']);
}

/**
 * Implements hook_system_breadcrumb_alter().
 */
function ddd_global_system_breadcrumb_alter($breadcrumb, RouteMatchInterface $route_match, array $context) {
  // Append the current page title to the breadcrumb for non-admin routes.
  if ($breadcrumb && !\Drupal::service('router.admin_context')->isAdminRoute()) {

    $request = \Drupal::request();
    $title = \Drupal::service('title_resolver')
      ->getTitle($request, $route_match->getRouteObject());
    if (!empty($title)) {
      $breadcrumb->addLink(Link::createFromRoute($title, '<none>'));
    }
  }
}

/**
 * Implements hook_block_view_BASE_BLOCK_ID_alter() for 'system_menu_block'.
 */
function ddd_global_block_view_system_menu_block_alter(array &$build, BlockPluginInterface $block) {
  if ('ddd2016_mainnavigation_2' === $build['#id']) {

    /** @var \Drupal\Core\Menu\MenuTreeParameters $parameters */
    $parameters = \Drupal::service('menu.link_tree')->getCurrentRouteMenuTreeParameters('main');
    $activeTrail = $parameters->activeTrail;

    $parent = NULL;
    while(($link = array_shift($activeTrail)) != '') {
      $parent = $link;
    }

    if($parent) {
      /** @var \Drupal\menu_link_content\Plugin\Menu\MenuLinkContent $parent */
      $parent = \Drupal::service('plugin.manager.menu.link')->createInstance(
        $parent
      );
      $plugin = $parent->getPluginDefinition();

      $build['#configuration']['label'] = $plugin['title'];
    }
  }
}

/**
 * Implements hook_entity_view_alter().
 */
function ddd_global_entity_view_alter(array &$build, EntityInterface $entity, EntityViewDisplayInterface $display) {
  if ($entity->getEntityType()->id() == 'node') {
    if (!empty($build['#attached']['html_head_link'])) {
      foreach ($build['#attached']['html_head_link'] as $key => $config) {
        if ($config[0]['rel'] != 'canonical' && $config[0]['rel'] != 'shortlink') {
          unset($build['#attached']['html_head_link'][$key]);
        }
      }
    }
  }
}

/**
 * Implements hook_user_login().
 */
function ddd_global_user_login($account) {
  $path = '/node/add/session';
  $request = Drupal::request();
  $referer = $request->headers->get('referer');

  if (false !== strstr($referer, $path)) {
    $response = new RedirectResponse($path);
    $response->send();

    return;
  }
}

function ddd_global_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
  if ($hook === 'user') {
    if (empty($variables['elements']) || empty($variables['elements']['#view_mode'])) {
      return;
    }

    if ($variables['elements']['#view_mode'] === 'rest') {
      $suggestions[] = $hook . '__rest';
    }
  }
}
